home에서는 sqlplus day - 1234

설정 :
jdk : 1.8 - pom.xml에서 강제설정
\\192.168.0.200

처음 이클립스로 설치할때
 market -> sts -> spring tools 3 설치 -> 다 체크 후 confirm
epp221.exe=> 메모장 같은 개발툴 
평가하기 -> 확인? -> 문서=-> 영구 설정 -> 글꼴=consolas / 파일 -> 저장시 백업 파일 생성 체크 헤제-> 백업 디렉토리에 원격~~생성 체크해제

이클립스에    spring legach project 만들꺼임

오라클 :C:\oraclexe\app\oracle\product 11.2.0에 있음
oracle_program에 있는 거 설치하면 되는 것임!!!

오라클 접속 사용자 만들기 :
[Oracle 11g] 오라클 유저 system, sys 암호 변경

C:\>sqlplus "/as sysdba"


SQL*Plus: Release 11.1.0.6.0 - Production on 토 12월 4 22:24:13 2010

Copyright (c) 1982, 2007, Oracle.  All rights reserved.

다음에 접속됨:
Oracle Database 11g Enterprise Edition Release 11.1.0.6.0 - Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL> SHOW USER
USER은 "SYS"입니다
SQL> ALTER USER SYS IDENTIFIED BY 원하는 암호; --굳이 할 필요 없다.

사용자가 변경되었습니다.

SQL> ALTER USER SYSTEM IDENTIFIED BY 원하는 암호;

사용자가 변경되었습니다.

SQL> SELECT USERNAME, PASSWORD FROM DBA_USERS; --굳이 할 필요 없다.


집에 있는 sqlplus실행 하려면... : sorce/newfolder / sqlplus/ sqlplus.exe


실 db저장 장소 C:\oraclexe\app\oracle\oradata\XE

임의의 db저장소 만들기 이름=day
 create tablespace day
  2  datafile 'C:\oraclexe\app\oracle\oradata\XE\day.dbf' size 200m;
Tablespace created.

 create user day
  2  identified by day
  3  default tablespace day
  4  quota unlimited on day;

User created.

SQL> grant connect,resource to day;

Grant succeeded.

SQL> conn day/day
Connected.
SQL> show user
USER is "DAY"
SQL>


 이클립스->openperspective->databaseconnection ->new ->oracle->next->
new drive definition -> systemversion 11->jarlist->ojdbc14.jar -> 
editjarjip ->ojdbc67.jar찾아추가 -> 
username,password입력 ,sid에 xe입력 , host에 127.0.0.1 입력 (server라고 일단 적혀 있음) , save password체크 



올려준pom다운 받고...얘가 프레임웤


톰캣 설치 :
tomcat9클릭 ->core의 zip클릭 -> 워크스페이스에 압축풀기 -> 그후 이클립스 
->openperspective -> spring -> server에 뭐시기 클릭 -> 아파치 -> 톰캣 9 -> 워크스페이스 브라우즈 -> finish

포트번호 바꿔야함 :
아파치 :8051
8052 

잠깐 글꼴 바꾸기
window->preference ->general->appearance->color fonts ->basic ->text font ->edit ->
 그리고  workspace 텝->other->utf-8
그리고 xml->xmlfile->systax coloring -> foregroudn 클릭 -> 색상 파란색, bold ->...
 그냥 기타 설정이었음..

서버구동 완료

file->new->spring legacy project-> 이름짓고->template의 spring mvc project선택 -> next->페키지 명을 넣어야함 : org.zerock.controller써넣기->finish
프로젝트 생성 끝

파일 탐색기-> 사용자 -> 에가면 .m2폴더가 생성됨->repository가 있을것
만약 설치가 잘 안됬으면 repository지우고 이클립스 시작하면 되는것 -----

현 웹 주소 http://localhost:8052/controller/
패키지 명의 끝이 노출

</version>과 <property>사이에


	<repositories>
		<repository>
		 <id>oracle</id>
		 <url>http://maven.jahia.org/maven2</url>
		</repository>
	   </repositories>
이거 추가!!!!

그후
커넥션 풀을 위한 라이브러리~~~끝 앞 까지 복사40~116줄
폼 30줄에 붙여넣기

204~209 복사 -> 197에 붙이기

저장 -> 폴더 ->메이븐 ->업데이트!

run as server -> hell world나오면 성공
--------------------------------------------------------------------------



jdk1.8로 바꼈는지 확인 :
file -> property -> javaCompiler :확인가능
		 -> project facets : java 1.8인지 확인가능

가. src/main/java : 패키지 이하 원본 자바파일/ vo,dao
나. src/main/resources : mybatis 관련 xml파일 경로(db)
다. src/test/java : 자바 테스트 경로
라. src/main/webapp/resources : html,css,javascript,jQuery,이미지 등 리소스 자원
경로
마. src/main/webapp/WEB-INF/spring : 스프링 관련 중요 설정파일
바. pom.xml : 메이븐 설정 파일


org.zerock.controller 패키지를 작성했다면 중간 경로가
 /controller이 된다. 최초 실행 경로는 브라우저에서
http://localhost:8081/controller가 된다.


junit test파일 만들기:
src/test/java밑에 org.~controller에ㅐ서 new ->class만들기

실행할때 run as junit test



mybatis :
xml 을 사용하여 sql문을 적용



namespace추가 
src->main->webapp->web-INF->spring->root-context.xml:
bean추가 하는 곳
여기서 밑의 namespace텝 누르기 -> aop,beabs,context,jdbc,mybatis,tx - 6개체크
->source텝 가면 추가되어있음

빈즈 안에 빈 태그 추가!
20 ~ 28
30~39 : mybatis
src/main/resources밑에 mybatis-config.xml만들기


의존성 주입..?
servlet-context.xml : front 단


--------------------------------------------------------------------------


http://localhost:8052/controller/doA주소로 들어가면 controller실행

RedirectAttributes rttr
rttr.addFlashAttribute("msg","this is seven");
	
@ModelAttribute("msg") String name
System.out.println("전달된 값 :"+name);

db연결
우측 상단database development -> connect
resources 폴더에 SQL폴더 생성 , 
new ->other->sqlfile->이름정하고 생성 

sql 파일내에서...
타임 = oracle_11 이름 : new oracle    db:xe   이거 해야 사용가능





member.xml : 쿼리 두는 곳
mybatis-config.xml : 경로에 따른 별칭 지정
root-context.xml : 빈을 활용하는 의존성 주입 
web.xml : 
root-context.xml {
id dataSource : db 연결
sqlSessionFactory : ref=dataSource에 접근
sqlSession : ref=sqlSessionFactory에 접근하면서, 쿼리를 다루는 애
 db
/
dao(Model): 인터페이스가 필수		
  \
service(고객의 추가 요구사항)	
    	\
 		Controller 	--	 view(webinf/view경로에 .jsp확장자로)
>>>>>>> fe4bf1febca38a44e393c0220971fa075081d1a5

day6---------------------------------------------------------------

<<<<<<< HEAD
public String doC(@ModelAttribute("msg") String message) {
		//@modelattribute("msg") : msg파라미터 이름에 인자값을 문자열로 전달한다
		
public String nameprice(Model m) {
m.addAttribute("a",a); // 프론트단에서 사용 가능


주소 변경 목적으로 넘기기
	@RequestMapping("/doE")
	public String doE(RedirectAttributes rttr) {
		rttr.addFlashAttribute("msg","this is seven");

		System.out.println(rttr.getFlashAttributes());
		//msg에 담기, 서버단의 다른 주소로 전달! => 보안성 우수
		return "redirect:/doF"; // doE => doF메핑 주소로 전달 = 프론트가 아님~!~!!!
		
	}
	@RequestMapping("/doF")
	public void doF(@ModelAttribute("msg") String name) {
		// void형이면 메핑주소가 jsp파일명이 된다
		//@modelattribute : 서버단 <> model : 프론트 단..???

		System.out.println("전달된 값 :"+name);
		
	}

daoimpl : 

@Autowired
	private SqlSession sqlSession;
	
this.sqlSession.insert("m_in",m);

<insert id="m_in" parameterType="m">
<!--  parameterType속성은 전달인자 타입으로 생략 가능 -->
insert into tbl_member values(#{userid},#{userpw},#{username},#{email},sysdate,sysdate)
<!--  sysdate : oracle날짜 함수 , #{userid}= m.getUserId() -->
</insert>

select 였다면 그냥 결과를 return 



=======
day6---------------------------------------------------------------

cannot find class :  분명 있는데 없다고 뜨는 경우 :
 package explorer에서는 있지만 없다는 경우 임 -> 실제 경로로 들어가 봐야함
 실 경로 :
  [C: - 드라이브 ]\[workspace]\.metadata\.plugins\
 org.eclipse.wst.server.core\tmp0\wtpwebapps로 이동-프로젝트명-
 WEB-INF/lib폴더에 가면 pom.xml에서 추가한 라이브러리를 확인 가능
 하다.
 그리고 classes > org >zerock에 src/main이 존재
 그럼 여기에 아무것도 없기에 cannot find ! : 
이때 package exploere에 있는 아무거나 하나 java를 다른 폴더로 옮겼다가 원래대로 옮기면
나머지도 전부 실 경로에 추가되어 있음!


onclick="location='/controller/board/board_list';"
onsubmit="return check();">  submit버튼 누르면 check실행

function check(){
	if($.trim($("#writer").val())==""){
		// trim : 양쪽 공백 제거 -> writer의 value를 공백 제거했더니 ""라면!
		alert("글쓴이를 입력하세요!");
		$("#writer").val('').focus();//val('')입력박스값을 초기화 ,  focus는 입력박스로 포커스 이동
		return false;
		
	}
}

js 다운 : 
jquery.com -> down -> 
downliad the compressed ,production jquery 3.4.1
->이거 exploer에서 해야함
이름을 jquery.js라고 바꾸자 -> 만든폴더에 넣기

0303-------------------------------------------------------------
0304-------------------------------------------------------------











